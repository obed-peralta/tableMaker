@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400;700&display=swap');
*{
    box-sizing: border-box;
    font-family: 'Source Sans Pro';
    
}

/*

Los layouts en flexbox trabajan en una sola dimensión, en filas (row) ó columnas (column)
Por defecto <display:flex> establece el layout en fila.
Podemos alterar dicha dimensión usando:

    flex-direction: row;
                    column => Layout en columnas
                    column-reverse => Layout en columnas invertidas.
                    row-reverse => Layout de fila pero con los items invertidos

Cuando el numero de items son demasiados se van apretando, necesitamos que se desborden en otra fila o columna.
Se usa la propiedad:

    flex-wrap: nowrap; => No realiza ningún desbordamiento

La propiedad CSS flex-flow  es una propiedad atajo para las propiedades individuales flex-direction y flex-wrap.

    flex-flow: <'flex-direction'> and <'flex-wrap'> 
    flex-flow: row nowrap;
    flex-flow: column wrap;
    flex-flow: column-reverse wrap-reverse;

La propiedad CSS justify-content define cómo el navegador distribuye el espacio entre y alrededor de los items flex, a lo largo del eje principal de su contenedor.



*/
.flex-container{
    background-color: #8EC5FC;
    background-image: linear-gradient(62deg, #8EC5FC 0%, #E0C3FC 100%);
    border: 2px solid black;
    position: relative;
    display: flex;
    padding: 10px;
    width: 100%;
    margin: 0 auto;
    justify-content: center;
    align-content: center;
    align-items: center;
}
.flex-item{
    /* display: flex; */
    background-color: rgba(255, 255, 255, 0.3);
    backdrop-filter: blur(10px);
    border: 1px solid #000;
    border-radius: 5px;
    padding: 1em;
    font-size: 2em;
}
.members{
    display: flex;
    flex-direction: column;
}
.member{
    margin-top: 0.5em;
}
.member:first-child{
    margin-top: 0;
}
.team-name{
    flex-shrink: 0;
    font-size: 3em;
    font-weight: 400;
}
.team-members{
    flex-grow: 0.5;
}
.team-total-points{
    flex-shrink: 0;
}

.data{
    display: flex;
    align-items: center;
}
.alias{
    flex-grow: 0;
    flex-shrink: 0;
    font-size: 0.9em;
}
.points{
    flex-grow: 2;
    display: flex;
    padding: 0 0 0 1em;
    justify-content: flex-start;
    align-items: center;
}
.point{
    flex-shrink: 3;
    padding: 0 0.2em;
    border-right: 2px solid gray;
    font-size: 0.7em;
    font-weight: 400;
    line-height: 0.7em;
}
.point:last-child{
    border-right: none;
}
.total-points{
    flex-grow: 0;
    flex-shrink: 0;
    font-size: 1.1em;
    font-weight: 500;
    /* text-align: right; */
}
.team-total-points{
    font-size: 3em;
    font-weight: 600;
}
/*.flex-container{
    /* El ajuste de este contenedor se hace de tipo flex-box
    display: flex; 
    background-color: burlywood;
    padding: 10px;
    border: 2px solid black;
}
.flex-container .flex-item{
    background-color: gainsboro;
    width: 100px;
    margin: 10px;
    text-align: center;
    line-height: 75px;
    font-size: 30px;
    border: 2px solid black;
}*/